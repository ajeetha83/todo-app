{"ast":null,"code":"import _classCallCheck from \"C:/Users/Admin/Documents/AK/Test/paper-kit-2-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Admin/Documents/AK/Test/paper-kit-2-angular-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, Input, Output, HostListener, forwardRef, EventEmitter, ViewChild, Renderer2, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nvar _c0 = [\"container\"];\nvar _c1 = [\"on\"];\nvar _c2 = [\"label\"];\nvar _c3 = [\"off\"];\n\nvar callback = function callback() {};\n/** @type {?} */\n\n\nvar CUSTOM_INPUT = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return JwBootstrapSwitchNg2Component;\n  }),\n  multi: true\n};\n\nvar JwBootstrapSwitchNg2Component = /*@__PURE__*/function () {\n  var JwBootstrapSwitchNg2Component = /*#__PURE__*/function () {\n    /**\n     * @param {?} cd\n     * @param {?} render\n     */\n    function JwBootstrapSwitchNg2Component(cd, render) {\n      _classCallCheck(this, JwBootstrapSwitchNg2Component);\n\n      this.cd = cd;\n      this.render = render; // Defining Default Options for Switch\n\n      this.handleWidth = 0;\n      this.labelWidth = 0;\n      this.labelText = '';\n      this.inverse = false;\n      this.baseClass = 'bootstrap-switch';\n      this.onText = 'ON';\n      this.offText = 'OFF';\n      this.disabled = false;\n      this.readonly = false;\n      this._focused = false;\n      this._size = 'normal';\n      this._animate = true;\n      this._innerAnimate = true;\n      this._indeterminate = false;\n      this._onColor = 'primary';\n      this._offColor = 'default';\n      this._wrapperClass = 'wrapper';\n      this._innerState = false;\n      this._innerHandleWidth = 'auto';\n      this._innerLabelWidth = 'auto';\n      this._dragStart = null;\n      this._dragEnd = null;\n      this._onTouchedCallback = callback;\n      this._onChangeCallback = callback;\n      this.changeState = new EventEmitter();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _createClass(JwBootstrapSwitchNg2Component, [{\n      key: \"$on\",\n      value: function $on() {\n        return this.on.nativeElement;\n      }\n      /**\n       * @private\n       * @return {?}\n       */\n\n    }, {\n      key: \"$off\",\n      value: function $off() {\n        return this.off.nativeElement;\n      }\n      /**\n       * @private\n       * @return {?}\n       */\n\n    }, {\n      key: \"$label\",\n      value: function $label() {\n        return this.label.nativeElement;\n      }\n      /**\n       * @private\n       * @return {?}\n       */\n\n    }, {\n      key: \"$container\",\n      value: function $container() {\n        return this.container.nativeElement;\n      }\n      /**\n       * \\@description: Function to set the Classes for the Wrapper Div\n       * @return {?} string\n       */\n\n    }, {\n      key: \"getWrapperClasses\",\n      value: function getWrapperClasses() {\n        /** @type {?} */\n        var output = this.baseClass + ' ' + this.baseClass + '-' + this._wrapperClass;\n\n        if (this._focused) {\n          output += ' ' + this.baseClass + '-focused';\n        }\n\n        if (this.readonly) {\n          output += ' ' + this.baseClass + '-readonly';\n        }\n\n        if (this._size != null) {\n          output += ' ' + this.baseClass + '-' + this._size;\n        }\n\n        if (this._innerState) {\n          output += ' ' + this.baseClass + '-on';\n        } else {\n          output += ' ' + this.baseClass + '-off';\n        }\n\n        if (this._animate) {\n          output += ' ' + this.baseClass + '-animate';\n        }\n\n        if (this.disabled) {\n          output += ' ' + this.baseClass + '-disabled';\n        }\n\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n          output += ' ' + this.baseClass + '-indeterminate';\n        }\n\n        if (this.inverse) {\n          output += ' ' + this.baseClass + '-inverse';\n        }\n\n        return output;\n      }\n      /**\n       * \\@description Function to set the css classes for #on\n       * @return {?} string\n       */\n\n    }, {\n      key: \"getOnClasses\",\n      value: function getOnClasses() {\n        /** @type {?} */\n        var output = this.baseClass + '-handle-on';\n\n        if (this._onColor) {\n          output += ' ' + this.baseClass + '-' + this._onColor;\n        }\n\n        return output;\n      }\n      /**\n       * \\@description Function to set the css classes for #off\n       * @return {?} string\n       */\n\n    }, {\n      key: \"getOffClasses\",\n      value: function getOffClasses() {\n        /** @type {?} */\n        var output = this.baseClass + '-handle-off';\n\n        if (this._offColor) {\n          output += ' ' + this.baseClass + '-' + this._offColor;\n        }\n\n        return output;\n      }\n      /**\n       * \\@description Function set the marging of the #label when change the state\n       * @return {?} string\n       */\n\n    }, {\n      key: \"getLabelMarginLeft\",\n      value: function getLabelMarginLeft() {\n        /** @type {?} */\n        var width = this.inverse ? -this.handleWidth : 0;\n\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n          width = -(this.handleWidth / 2);\n        } else if (this._dragEnd) {\n          width = this._dragEnd;\n        } else if (!this._innerState) {\n          if (!this.inverse) {\n            width = -this.handleWidth;\n          } else {\n            width = 0;\n          }\n        }\n\n        return width + 'px';\n      }\n      /**\n       * @param {?} changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        if (changes['setLabelText'] || changes['setOnText'] || changes['setHandleWidth'] || changes['setLabelWidth'] || changes['setOffText'] || changes['setSize']) {\n          this.calculateWith(true);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.calculateWith();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onClick\",\n      value: function onClick() {\n        if (!this.disabled && !this.readonly && !this._dragEnd) {\n          this.setStateValue(!this._innerState);\n        } else if (this._dragEnd) {\n          this._dragEnd = null;\n        }\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onKeyDown\",\n      value: function onKeyDown(e) {\n        if (!e.which || this.disabled || this.readonly) {\n          return;\n        }\n\n        switch (e.which) {\n          case 37:\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            this.setStateValue(false);\n            break;\n\n          case 39:\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            this.setStateValue(true);\n            break;\n        }\n      }\n      /**\n       * @private\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onDragStart\",\n      value: function onDragStart(e) {\n        if (e.target === this.$label()) {\n          if (this._dragStart || this.disabled || this.readonly) {\n            return;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          this._dragStart = (e.pageX || e.touches[0].pageX) - parseInt(this.$container().style.marginLeft, 10);\n\n          if (this._animate) {\n            this._animate = !this._animate;\n          }\n        }\n      }\n      /**\n       * @private\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onDragMove\",\n      value: function onDragMove(e) {\n        if (this._dragStart) {\n          e.preventDefault();\n          /** @type {?} */\n\n          var difference = (e.pageX || e.touches[0].pageX) - this._dragStart;\n\n          if (difference < -Number(this.handleWidth) || difference > 0) {\n            return;\n          }\n\n          this._dragEnd = difference;\n        }\n      }\n      /**\n       * @private\n       * @param {?} e\n       * @param {?=} removeDragEnd\n       * @return {?}\n       */\n\n    }, {\n      key: \"onDragEnd\",\n      value: function onDragEnd(e) {\n        var removeDragEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (this._dragStart) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (this._dragEnd) {\n            /** @type {?} */\n            var state = this._dragEnd > -(Number(this.handleWidth) / 2);\n            this.setStateValue(this.inverse ? !state : state);\n          }\n\n          this._dragStart = null;\n\n          if (removeDragEnd) {\n            this._dragEnd = null;\n          }\n\n          if (this._innerAnimate) {\n            this._animate = true;\n          }\n        }\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onTouchStart\",\n      value: function onTouchStart(e) {\n        this.onDragStart(e);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onMouseDown\",\n      value: function onMouseDown(e) {\n        this.onDragStart(e);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onTouchMove\",\n      value: function onTouchMove(e) {\n        this.onDragMove(e);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onMouseMove\",\n      value: function onMouseMove(e) {\n        this.onDragMove(e);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onMouseUp\",\n      value: function onMouseUp(e) {\n        this.onDragEnd(e);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onTouchEnd\",\n      value: function onTouchEnd(e) {\n        this.onDragEnd(e, true);\n      }\n      /**\n       * @param {?} e\n       * @return {?}\n       */\n\n    }, {\n      key: \"onMouseLeave\",\n      value: function onMouseLeave(e) {\n        this.onDragEnd(e, true);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onFocus\",\n      value: function onFocus() {\n        this._focused = true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onBlur\",\n      value: function onBlur() {\n        this._focused = false;\n\n        this._onTouchedCallback();\n      }\n      /**\n       * \\@description Function to make recalculate the size of the elements when options change\n       * @private\n       * @param {?=} disableAnimation\n       * @return {?}\n       */\n\n    }, {\n      key: \"calculateWith\",\n      value: function calculateWith() {\n        var _this = this;\n\n        var disableAnimation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (disableAnimation && this._innerAnimate) {\n          this._animate = false;\n        }\n\n        setTimeout(function () {\n          _this.render.setStyle(_this.$on(), 'width', 'auto');\n\n          _this.render.setStyle(_this.$off(), 'width', 'auto');\n\n          _this.render.setStyle(_this.$label(), 'width', 'auto');\n          /** @type {?} */\n\n\n          var width = _this._innerHandleWidth === 'auto' ? Math.max(_this.$on().offsetWidth, _this.$off().offsetWidth) : _this._innerHandleWidth;\n\n          if (_this.$label().offsetWidth < width) {\n            if (_this._innerLabelWidth === 'auto') {\n              _this.labelWidth = Number(width);\n            } else {\n              _this.labelWidth = Number(_this._innerLabelWidth);\n            }\n          } else {\n            if (_this._innerLabelWidth === 'auto') {\n              _this.labelWidth = _this.$label().offsetWidth;\n            } else {\n              _this.labelWidth = Number(_this._innerLabelWidth);\n            }\n          }\n\n          _this.handleWidth = Number(width);\n\n          _this.render.setStyle(_this.$label(), 'width', _this.labelWidth + 'px');\n\n          _this.render.setStyle(_this.$on(), 'width', _this.handleWidth + 'px');\n\n          _this.render.setStyle(_this.$off(), 'width', _this.handleWidth + 'px');\n\n          setTimeout(function () {\n            if (disableAnimation && _this._innerAnimate) {\n              _this._animate = true;\n            }\n          });\n\n          _this.cd.markForCheck();\n        });\n      } // Functions to set inputs and the private variables of the Switch\n\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setBaseClass\",\n      set: function set(value) {\n        this.baseClass = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setWrapperClass\",\n      set: function set(value) {\n        this._wrapperClass = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setOffText\",\n      set: function set(value) {\n        this.offText = value ? value : 'OFF';\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setLabelText\",\n      set: function set(value) {\n        this.labelText = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setOnText\",\n      set: function set(value) {\n        this.onText = value ? value : 'ON';\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setSize\",\n      set: function set(value) {\n        if (value) {\n          this._size = value;\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setAnimate\",\n      set: function set(value) {\n        this._animate = value;\n        this._innerAnimate = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setOnColor\",\n      set: function set(value) {\n        if (value) {\n          this._onColor = value;\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setOffColor\",\n      set: function set(value) {\n        if (value) {\n          this._offColor = value;\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setDisabled\",\n      set: function set(value) {\n        this.disabled = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setReadOnly\",\n      set: function set(value) {\n        this.readonly = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setIndeterminate\",\n      set: function set(value) {\n        this._indeterminate = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setInverse\",\n      set: function set(value) {\n        this.inverse = value;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setHandleWidth\",\n      set: function set(value) {\n        this._innerHandleWidth = typeof value !== 'undefined' ? value : 'auto';\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"setLabelWidth\",\n      set: function set(value) {\n        this._innerLabelWidth = typeof value !== 'undefined' ? value : 'auto';\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._innerState;\n      }\n      /**\n       * @param {?} v\n       * @return {?}\n       */\n      ,\n      set: function set(v) {\n        if (v === null || typeof v === 'undefined') {\n          this._indeterminate = true;\n        }\n\n        this.setStateValue(v);\n      }\n      /**\n       * @private\n       * @param {?} v\n       * @return {?}\n       */\n\n    }, {\n      key: \"setStateValue\",\n      value: function setStateValue(v) {\n        if (v !== this._innerState) {\n          this._onChangeCallback(v);\n\n          this.changeState.emit({\n            previousValue: this._innerState,\n            currentValue: v\n          });\n          this._innerState = v;\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        if (value !== this._innerState) {\n          this._innerState = value;\n          this.cd.markForCheck();\n        }\n      }\n      /**\n       * @param {?} isDisabled\n       * @return {?}\n       */\n\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n      }\n      /**\n       * @param {?} fn\n       * @return {?}\n       */\n\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this._onChangeCallback = fn;\n      }\n      /**\n       * @param {?} fn\n       * @return {?}\n       */\n\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this._onTouchedCallback = fn;\n      }\n    }]);\n\n    return JwBootstrapSwitchNg2Component;\n  }();\n\n  JwBootstrapSwitchNg2Component.ɵfac = function JwBootstrapSwitchNg2Component_Factory(t) {\n    return new (t || JwBootstrapSwitchNg2Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  JwBootstrapSwitchNg2Component.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: JwBootstrapSwitchNg2Component,\n    selectors: [[\"bSwitch\"]],\n    viewQuery: function JwBootstrapSwitchNg2Component_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.on = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.off = _t.first);\n      }\n    },\n    hostBindings: function JwBootstrapSwitchNg2Component_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function JwBootstrapSwitchNg2Component_click_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"keydown\", function JwBootstrapSwitchNg2Component_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"touchstart\", function JwBootstrapSwitchNg2Component_touchstart_HostBindingHandler($event) {\n          return ctx.onTouchStart($event);\n        })(\"mousedown\", function JwBootstrapSwitchNg2Component_mousedown_HostBindingHandler($event) {\n          return ctx.onMouseDown($event);\n        })(\"touchmove\", function JwBootstrapSwitchNg2Component_touchmove_HostBindingHandler($event) {\n          return ctx.onTouchMove($event);\n        })(\"mousemove\", function JwBootstrapSwitchNg2Component_mousemove_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        })(\"mouseup\", function JwBootstrapSwitchNg2Component_mouseup_HostBindingHandler($event) {\n          return ctx.onMouseUp($event);\n        })(\"touchend\", function JwBootstrapSwitchNg2Component_touchend_HostBindingHandler($event) {\n          return ctx.onTouchEnd($event);\n        })(\"mouseleave\", function JwBootstrapSwitchNg2Component_mouseleave_HostBindingHandler($event) {\n          return ctx.onMouseLeave($event);\n        });\n      }\n    },\n    inputs: {\n      setBaseClass: [\"switch-base-class\", \"setBaseClass\"],\n      setWrapperClass: [\"switch-wrapper-class\", \"setWrapperClass\"],\n      setOffText: [\"switch-off-text\", \"setOffText\"],\n      setLabelText: [\"switch-label-text\", \"setLabelText\"],\n      setOnText: [\"switch-on-text\", \"setOnText\"],\n      setSize: [\"switch-size\", \"setSize\"],\n      setAnimate: [\"switch-animate\", \"setAnimate\"],\n      setOnColor: [\"switch-on-color\", \"setOnColor\"],\n      setOffColor: [\"switch-off-color\", \"setOffColor\"],\n      setDisabled: [\"switch-disabled\", \"setDisabled\"],\n      setReadOnly: [\"switch-readonly\", \"setReadOnly\"],\n      setIndeterminate: [\"switch-indeterminate\", \"setIndeterminate\"],\n      setInverse: [\"switch-inverse\", \"setInverse\"],\n      setHandleWidth: [\"switch-handle-width\", \"setHandleWidth\"],\n      setLabelWidth: [\"switch-label-width\", \"setLabelWidth\"]\n    },\n    outputs: {\n      changeState: \"changeState\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([CUSTOM_INPUT]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 17,\n    consts: [[3, \"ngClass\"], [\"container\", \"\"], [3, \"innerHTML\", \"ngClass\"], [\"on\", \"\"], [\"label\", \"\"], [\"off\", \"\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"readonly\", \"disabled\", \"ngModelChange\", \"focus\", \"blur\"]],\n    template: function JwBootstrapSwitchNg2Component_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2, 3);\n        ɵngcc0.ɵɵelementStart(5, \"span\", 0, 4);\n        ɵngcc0.ɵɵtext(7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(8, \"span\", 2, 5);\n        ɵngcc0.ɵɵelementStart(10, \"input\", 6);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function JwBootstrapSwitchNg2Component_Template_input_ngModelChange_10_listener($event) {\n          return ctx.value = $event;\n        })(\"focus\", function JwBootstrapSwitchNg2Component_Template_input_focus_10_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function JwBootstrapSwitchNg2Component_Template_input_blur_10_listener() {\n          return ctx.onBlur();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.handleWidth + ctx.labelWidth + \"px\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.getWrapperClasses());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.handleWidth * 2 + ctx.labelWidth + \"px\")(\"margin-left\", ctx.getLabelMarginLeft());\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.baseClass + \"-container\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.inverse ? ctx.offText : ctx.onText, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ctx.inverse ? ctx.getOffClasses() : ctx.getOnClasses());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.baseClass + \"-label\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\"\\xA0\", ctx.labelText, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.inverse ? ctx.onText : ctx.offText, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ctx.inverse ? ctx.getOnClasses() : ctx.getOffClasses());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.value)(\"readonly\", ctx.readonly)(\"disabled\", ctx.disabled);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel],\n    encapsulation: 2\n  });\n  return JwBootstrapSwitchNg2Component;\n}();\n\nvar JwBootstrapSwitchNg2Module = /*@__PURE__*/function () {\n  var JwBootstrapSwitchNg2Module = function JwBootstrapSwitchNg2Module() {\n    _classCallCheck(this, JwBootstrapSwitchNg2Module);\n  };\n\n  JwBootstrapSwitchNg2Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: JwBootstrapSwitchNg2Module\n  });\n  JwBootstrapSwitchNg2Module.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function JwBootstrapSwitchNg2Module_Factory(t) {\n      return new (t || JwBootstrapSwitchNg2Module)();\n    },\n    imports: [[CommonModule, FormsModule]]\n  });\n  return JwBootstrapSwitchNg2Module;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(JwBootstrapSwitchNg2Module, {\n    declarations: function declarations() {\n      return [JwBootstrapSwitchNg2Component];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [JwBootstrapSwitchNg2Component];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { JwBootstrapSwitchNg2Component, JwBootstrapSwitchNg2Module };","map":null,"metadata":{},"sourceType":"module"}